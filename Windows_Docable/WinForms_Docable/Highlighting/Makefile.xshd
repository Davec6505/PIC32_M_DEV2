<?xml version="1.0"?>
<SyntaxDefinition name="Makefile" extensions=".make;.mk;.makefile"
  xmlns="http://icsharpcode.net/sharpdevelop/syntaxdefinition/2008">

  <!-- Define colors directly under SyntaxDefinition -->
  <Color name="Comment" foreground="Green" />
  <Color name="Target" foreground="Blue" fontWeight="bold" />
  <Color name="Variable" foreground="Purple" />
  <Color name="Command" foreground="Orange" />
  <Color name="Keyword" foreground="#00ff00" fontWeight="bold" />
  <Color name="String" foreground="Brown" />
  <Color name="Echo" foreground="#000020" fontWeight="bold" />
  <Color name="FileCommands" foreground="#000050" fontWeight="bold" />

  <RuleSet>
    <!-- Strings first so '#' inside strings isn't a comment -->
    <Span color="String" begin="&quot;" end="&quot;" />
    <Span color="String" begin="&apos;" end="&apos;" />

    <!-- Highlight @echo, @cd, @rm at start of line (optionally after whitespace) -->
    <Rule color="Echo">^\s*@echo\b</Rule>
    <Rule color="Echo">^\s*@cd\b</Rule>
    <Rule color="Echo">^\s*@rm\b</Rule>

    <Rule color="FileCommands">^\s*cd\b</Rule>

    <!-- Comments -->
    <Span color="Comment" begin="#" end="\n" />

    <!-- Targets -->
    <Span color="Target" begin="^[^\s]+:" end=":" />

    <!-- Variables -->
    <Span color="Variable" begin="\$\(" end="\)" />
    <Span color="Variable" begin="\$\{" end="\}" />

    <!-- Commands -->
    <Rule color="Command">^\t.*</Rule>


    <!-- Match 'include' only when not preceded by '/' -->
    <Rule color="Keyword">(?&lt;!/)\binclude\b</Rule>

    <!-- Keywords -->
    <Keywords color="Keyword">
      <Word>ifeq</Word>
      <Word>if</Word>
      <Word>else</Word>
      <Word>endif</Word>
      <Word>ifndef</Word>
      <!--Word>include</Word-->
      <Word>define</Word>
      <Word>export</Word>
      <Word>override</Word>
      <Word>unexport</Word>
    </Keywords>
  </RuleSet>
</SyntaxDefinition>




<!--SyntaxDefinition name="C#"
        xmlns="http://icsharpcode.net/sharpdevelop/syntaxdefinition/2008">
    <Color name="Comment" foreground="Green" />
    <Color name="String" foreground="Blue" />

    <! This is the main ruleset. -->
<!--RuleSet>
        <Span color="Comment" begin="//" />
        <Span color="Comment" multiline="true" begin="/\*" end="\*/" />

        <Span color="String">
            <Begin>"</Begin>
            <End>"</End>
            <RuleSet>
                < nested span for escape sequences -->
<!--Span begin="\\" end="." />
            </RuleSet>
        </Span>

        <Keywords fontWeight="bold" foreground="Blue">
            <Word>if</Word>
            <Word>else</Word>
            < ... -->
<!--/Keywords>

        < Digits -->
<!--Rule foreground="DarkBlue">
            \b0[xX][0-9a-fA-F]+  # hex number
        |    \b
            (    \d+(\.[0-9]+)?   #number with optional floating point
            |    \.[0-9]+         #or just starting with floating point
            )
            ([eE][+-]?[0-9]+)? # optional exponent
        </Rule>
    </RuleSet>
</SyntaxDefinition-->

<!--
These are mandatory because .xshd is XML-based. If you forget them, your file won't parse.

Character	Escape Code	Meaning
"	&quot;	Double quote (used in attributes)
'	&apos;	Single quote
<	&lt;	Less than
>	&gt;	Greater than
&	&amp;	Ampersand
üß™ Regex Escapes (Inside regex="...")
These are regex-specific and must be escaped properly within XML. That means double escaping in some cases.

Regex Concept	Regex Code	XML-Safe Version	Meaning
Word boundary	\b	\\b	Matches word boundary
Backslash	\	\\	Escape character
Dot (any char)	.	.	Matches any character
Asterisk	*	*	Zero or more
Plus	+	+	One or more
Pipe (OR)	`	`	`	`	Alternation
Parens	()	()	Grouping
Square brackets	[]	[]	Character class
Curly braces	{}	{}	Quantifier
Dollar	$	$	End of line
Caret	^	^	Start of line
Question mark	?	?	Optional
‚ö†Ô∏è Double escaping: In .xshd, regex is inside XML attributes, so you often need to escape twice. For example, \b becomes \\b.

üßµ Span Rules Quirks
Use &quot; for quotes in begin and end.

Use multiline="true" for spans that cross lines.

Avoid using regex inside <Span> ‚Äî it‚Äôs not supported.

üß† Common Pitfalls
Forgetting to escape & in regex: & must be &amp;.

Using \b without double escaping: must be \\b.

Using unescaped quotes inside attributes: use &quot;.

Mixing regex and spans: use <RegexRule> for single-line, <Span> for multiline.

Would you like a cheat sheet or validator script to help catch these issues in your .xshd files? I can help you build one in PowerShell or C# if that fits your workflow.
-->